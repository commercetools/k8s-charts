image:
  # 'commercetools/commercetools-email-retry-processor'
  repository: 'MUST_BE_OVERRIDDEN'
  # '1.0.0'
  tag: 'MUST_BE_OVERRIDDEN'
  pullPolicy: 'IfNotPresent'
  # specifies the entry point command to the docker container. The docker image's `ENTRYPOINT` is used if this is not provided.
  command: []
  # specifies the arguments to the entry point to the docker container. The docker image's `CMD` is used if this is not provided.
  args: []

## specifies the resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
#  requests:
#    cpu: 50m
#    memory: 256Mi
#  limits:
#    cpu: 150m
#    memory: 512Mi

# specifies a Cron format string, e.g. 0 * * * * or @hourly,
# as schedule time of its jobs to be created and executed
schedule: '*/1 * * * *'

# suspends cronjob at start
suspend: false

# on-demand jobs are suspended at start and labeled with runOnDemandOnly:true label
runOnDemandOnly: false

# By default if cron job fails to trigger 100 times it's scheduled job
# (due to jobs's unexpectedly long run or temporal network error) then cron
# job gets stuck and do not schedule new jobs anymore. Below setting ensures
# that failed job executions are only counted within last 600 seconds and
# thus not reaching the limit. For cron schedules below 1 minutes one should
# consider to override default with lower value.
# More info: https://github.com/kubernetes/kubernetes/pull/39608
startingDeadlineSeconds: 600

# non sensitive environment variables
nonSensitiveEnvs: {}

# sensitive environment variables
sensitiveEnvs: {}

# specifies how to treat concurrent executions of a job created by this cron job
concurrency: Forbid

# specifies how many completed and failed jobs should be kept.
successfulJobsHistoryLimit: 5
failedJobsHistoryLimit: 5

# enable this option if you need to supply config file to your cronjob
externalConfig:
  enabled: false
  path: /app/config
  configFileName: config.json
  content: |-
    {
      "your": "content"
    }

# The backoffLimit field specifies the number of retries before marking the job as failed; the default value is 6.
backoffLimit: 6
